@startuml

title Diagramme UML de la base de donn√©es Prisma SIGL

entity User {
  * id: Int [PK]
  --
  lastName: String
  firstName: String
  birthDate: DateTime
  gender: String
  email: String [Unique]
  password: String
  phone: String
  active: Boolean
  creationDate: DateTime
  updateDate: DateTime
}

entity Group {
  * id: Int [PK]
  --
  name: String
  description: String
  color: String
}

entity Note {
  * id: Int [PK]
  --
  title: String
  content: String
}

entity CurriculumManager{
  * id: Int [PK]
  --
  DateDebut: date
  DateFin: date
}

entity GroupFile {
  * id: Int [PK]
  --
  name: String
  comment: String?
  blobName: String
  createdAt: DateTime
}

entity FormationCenter {
  * id: Int [PK]
  --
  name: String
  address: String
  city: String
  country: String
  studentNumber: Int?
  description: String?
  field: String?
}

entity EducationalTutor {
  * id: Int [PK]
  --
  userId: Int [Unique]
}

entity Apprentice {
  * id: Int [PK]
  --
  userId: Int [Unique]
  companyId: Int?
  promotion: String?
  poste: String?
}

entity Company {
  * id: Int [PK]
  --
  name: String
  address: String
  city: String
  country: String
  description: String?
  apprenticeNumber: Int?
  opco: String?
}

entity Speciality {
  * id: Int [PK]
  --
  name: String
}

entity Event {
  * id: Int [PK]
  --
  type: String
  description: String?
  endDate: DateTime
}

entity EventFile {
  * id: Int [PK]
  --
  name: String
  comment: String?
  blobName: String
  createdAt: DateTime
}

entity Meeting {
  * id: Int [PK]
  --
  title: String
  description: String?
  date: DateTime
  createdAt: DateTime
}

entity TrainingDiary {
  * id: Int [PK]
  --
  description: String?
}

entity Skill {
  * id: Int [PK]
  --
  code: String [Unique]
  name: String [Unique]
  description: String
  inProgressSemester: String?
  obtainedSemester: String
}

entity SkillEvaluation {
  * id: Int [PK]
  --
  status: String
  comment: String
}

entity BiannualEvaluation {
  * id: Int [PK]
  --
  semester: String
  createdAt: DateTime
}

entity ApprenticeCoordinator {
  * id: Int [PK]
  --
  DateDebut: date
  DateFin: date
}

entity Deliverable {
  * id: Int <<PK>>
  --
  comment: String
  blobName: String
  createdAt: DateTime
}

User "1" -- "*" Group : belongs to
User "1" -- "*" Meeting : presenter or jury
User "1" -- "*" EducationalTutor : tutor role
User "1" -- "*" Apprentice : apprentice role
User "1" -- "*" Admin : admin role
User "1" -- "1" ApprenticeMentor : mentor role
User "1" -- "1" CurriculumManager : curriculum manager role
User "1" -- "1" CompanyAccount : company account role
Group "1" -- "*" GroupFile : contains
Group "1" -- "*" Event : participates in
Apprentice "1" -- "1" TrainingDiary : has a
FormationCenter "1" -- "*" EducationalTutor : includes
FormationCenter "1" -- "*" CurriculumManager : hosts manager
FormationCenter "1" -- "*" ApprenticeCoordinator : coordinates apprentices
EducationalTutor "1" -- "*" Apprentice : tutors
Company "1" -- "*" Apprentice : employs
Company "1" -- "*" ApprenticeMentor : mentors
Company "1" -- "*" Speciality : specializes in
Company "1" -- "*" CompanyAccount : has accounts
Event "1" -- "*" EventFile : includes
Event "1" -- "*" Meeting : linked to
Event "1" -- "*" Deliverable : produces
TrainingDiary "1" -- "*" SkillEvaluation : evaluates
TrainingDiary "1" -- "*" Note : has notes
TrainingDiary "1" -- "*" BiannualEvaluation : schedules
Skill "1" -- "*" SkillEvaluation : part of
BiannualEvaluation "1" -- "*" SkillEvaluation : aggregates
Meeting "1" -- "*" Event : includes

@enduml

