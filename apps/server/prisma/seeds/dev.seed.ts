import { db } from "../../src/providers/db";
import password from "../../src/services/password.service";

async function main() {
  console.log("Initialisation de la base de donnÃ©es...");
  // Administrateur
  await db.user.create({
    data: {
      lastName: "Doe",
      firstName: "John",
      birthDate: new Date("1990-01-01"),
      active: true,
      email: "admin@fastgn.com",
      password: await password.crypt("root"),
      gender: "male",
      phone: "1234567890",
      admin: {
        create: {},
      },
    },
  });
  await db.user.create({
    data: {
      lastName: "Akerman",
      firstName: "Alice",
      birthDate: new Date("1991-02-02"),
      active: true,
      email: "alice@fastgn.com",
      password: await password.crypt("1234"),
      gender: "female",
      phone: "6666666666",
      apprentice: {
        create: {},
      },
    },
  });
  await db.user.create({
    data: {
      lastName: "LeBricoleur",
      firstName: "Bob",
      birthDate: new Date("1992-03-03"),
      active: true,
      email: "bob@bric.com",
      password: await password.crypt("azerty"),
      gender: "helicopter",
      phone: "7777777777",
      teacher: {
        create: {},
      },
    },
  });
  // Apprenti avec un journal de formation
  await db.user.create({
    data: {
      lastName: "Julie",
      firstName: "Meulin",
      birthDate: new Date("1998-05-23"),
      active: true,
      email: "julie.meulin@eseo.fr",
      password: await password.crypt("password"),
      gender: "male",
      phone: "1234567890",
      apprentice: {
        create: {
          trainingDiary: {
            create: {
              notes: {
                create: {
                  title: "Semaine 1",
                  content: `note <h1 class="heading-node">PremiÃ¨re semaine en entreprise ğŸ“š</h1><p class="text-node">Cette premiÃ¨re semaine en entreprise a Ã©tÃ© Ã  la fois intense et enrichissante. DÃ¨s mon arrivÃ©e, jâ€™ai Ã©tÃ© accueilli par lâ€™Ã©quipe technique qui mâ€™a prÃ©sentÃ© les locaux, les outils de travail et surtout les projets en cours. Jâ€™ai rapidement compris que lâ€™environnement ici est Ã  la fois dynamique et collaboratif</p><p class="text-node">Les premiers jours ont Ã©tÃ© consacrÃ©s Ã  lâ€™installation de mon environnement de dÃ©veloppement : configuration des outils comme <strong>Git</strong>, lâ€™IDE principal et les diffÃ©rents logiciels nÃ©cessaires au projet.</p><p class="text-node">Mon tuteur mâ€™a guidÃ© Ã  chaque Ã©tape, en prenant le temps dâ€™expliquer le workflow utilisÃ© dans lâ€™Ã©quipe, notamment les bonnes pratiques en matiÃ¨re de versionnement et de revue de code.</p><p class="text-node"><span style="color: var(--mt-accent-red)"><u>Voici un exemple de commande que jâ€™ai utilisÃ©e :</u></span></p><pre class="block-node"><code>git commit -m "Changement de version de Node"</code></pre><p class="text-node"></p><p class="text-node">Jâ€™ai Ã©galement participÃ© Ã  ma premiÃ¨re rÃ©union <strong>stand-up</strong> quotidienne oÃ¹ chacun prÃ©sente ses avancÃ©es et ses objectifs pour la journÃ©e. Câ€™Ã©tait impressionnant de voir la fluiditÃ© de la communication dans lâ€™Ã©quipe et cela mâ€™a permis de mieux comprendre comment chaque membre contribue au projet global.</p><p class="text-node">En fin de semaine, jâ€™ai commencÃ© Ã  travailler sur ma premiÃ¨re tÃ¢che concrÃ¨te : corriger un bug mineur et ajouter une petite fonctionnalitÃ©. MÃªme si cela mâ€™a pris plus de temps que prÃ©vu, jâ€™ai appris Ã©normÃ©ment, notamment sur le dÃ©bogage et lâ€™importance de lire attentivement le code existant.</p><p class="text-node">Pour rÃ©sumer, cette premiÃ¨re semaine mâ€™a montrÃ© que le mÃ©tier de dÃ©veloppeur ne se limite pas Ã  Ã©crire du code : il sâ€™agit aussi de travailler en Ã©quipe, de comprendre les besoins du projet et de rester curieux pour progresser. Je me sens dÃ©jÃ  plus confiant et motivÃ© pour la suite de cette aventure. ğŸš€</p>`,
                },
              },
            },
          },
        },
      },
    },
  });
  console.log("Base de donnÃ©es initialisÃ©e.");
}

main().catch((e) => {
  console.error(e);
  process.exit(1);
});
