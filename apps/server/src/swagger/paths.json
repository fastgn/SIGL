{
  "/auth/login": {
    "post": {
      "summary": "Route de connexion",
      "tags": ["Auth"],
      "description": "Permet à un utilisateur de se connecter à l'application en fournissant son email et son mot de passe",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "L'email de l'utilisateur"
                },
                "password": {
                  "type": "string",
                  "description": "Le mot de passe de l'utilisateur"
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Connexion réussie",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "Le token JWT de l'utilisateur"
                  },
                  "user": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Requête invalide"
        },
        "401": {
          "description": "Identifiants invalides"
        },
        "500": {
          "description": "Erreur serveur"
        }
      }
    }
  },
  "/user/count": {
    "get": {
      "summary": "Récupération du nombre total d'utilisateurs",
      "tags": ["User"],
      "description": "Permet à un admin de récupérer le nombre total d'utilisateurs",
      "responses": {
        "200": {
          "description": "Récupération du nombre total d'utilisateurs",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "Status du succes de la requete"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message de la requete"
                  },
                  "data": {
                    "type": "integer",
                    "description": "Nombre total d'utilisateurs"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "/user/count/role": {
    "get": {
      "summary": "Récupération du nombre total d'utilisateurs par role",
      "tags": ["User"],
      "description": "Permet à un admin de récupérer le nombre total d'utilisateurs par role",
      "responses": {
        "200": {
          "description": "Récupération du nombre total d'utilisateurs par role",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "Status du succes de la requete"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message de la requete"
                  },
                  "data": {
                    "type": "object",
                    "description": "Nombre total d'utilisateurs par role",
                    "properties": {
                      "apprentice": {
                        "type": "integer",
                        "description": "Nombre d'apprenti"
                      },
                      "apprentice_coordinator": {
                        "type": "integer",
                        "description": "Nombre de coordinateur d'apprenti"
                      },
                      "apprentice_mentor": {
                        "type": "integer",
                        "description": "Nombre de mentor d'apprenti"
                      },
                      "curiculum_manager": {
                        "type": "integer",
                        "description": "Nombre de gestionnaire de cursus"
                      },
                      "educational_tutor": {
                        "type": "integer",
                        "description": "Nombre de tuteur pédagogique"
                      },
                      "teacher": {
                        "type": "integer",
                        "description": "Nombre de professeur"
                      },
                      "admin": {
                        "type": "integer",
                        "description": "Nombre d'admin"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "/user/{id}/groups": {
    "get": {
      "summary": "Récupération des groupes d'un utilisateur",
      "tags": ["User"],
      "description": "Permet à un utilisateur de récupérer la liste des groupes auxquels il appartient",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "ID de l'utilisateur"
        }
      ],
      "responses": {
        "200": {
          "description": "Récupération des groupes d'un utilisateur"
        }
      }
    }
  },
  "/diary/user/{id}": {
    "post": {
      "summary": "Création d'un journal de formation",
      "tags": ["Diary"],
      "description": "Permet à un admin de créer un journal de formation",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "ID de l'utilisateur"
        }
      ],
      "responses": {
        "200": {
          "description": "Récupération d'un journal de formation",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "Status du succes de la requete"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message de la requete"
                  },
                  "data": {
                    "type": "object",
                    "description": "Données de la requete",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Id du journal"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description du journal"
                      },
                      "apprenticeId": {
                        "type": "integer",
                        "description": "Id de l'apprenti lié au journal"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "delete": {
      "summary": "Suppression d'un journal de formation",
      "tags": ["Diary"],
      "description": "Permet à un admin de supprimer un journal de formation",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "ID de l'utilisateur"
        }
      ],
      "responses": {
        "200": {
          "description": "Récupération d'un journal de formation",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "Status du succes de la requete"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message de la requete"
                  },
                  "data": {
                    "type": "object",
                    "description": "Données de la requete",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Id du journal"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description du journal"
                      },
                      "apprenticeId": {
                        "type": "integer",
                        "description": "Id de l'apprenti lié au journal"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "get": {
      "summary": "Récupération des journaux de formation",
      "tags": ["Diary"],
      "description": "Permet à un utilisateur de récupérer la liste des journaux de formation",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "ID de l'utilisateur"
        }
      ],
      "responses": {
        "200": {
          "description": "Récupération d'un journal de formation",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "Status du succes de la requete"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message de la requete"
                  },
                  "data": {
                    "type": "object",
                    "description": "Données de la requete",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Id du journal"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description du journal"
                      },
                      "apprenticeId": {
                        "type": "integer",
                        "description": "Id de l'apprenti lié au journal"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "/events": {
    "get": {
      "summary": "Récupération des événements",
      "tags": ["Event"],
      "description": "Permet à un utilisateur de récupérer la liste des événements",
      "responses": {
        "200": {
          "description": "Liste des événements récupérée avec succès."
        },
        "500": {
          "description": "Erreur interne du serveur."
        }
      }
    },
    "post": {
      "summary": "Création d'un événement",
      "tags": ["Event"],
      "description": "Permet à un admin ou coordinateur d'apprentissage de créer un événement.",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "endDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "type": {
                  "type": "string"
                },
                "groups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "required": ["description", "endDate", "type"]
            }
          }
        }
      }
    },
    "/events/{id}": {
      "put": {
        "summary": "Modification d'un événement",
        "tags": ["Event"],
        "description": "Permet à un admin ou coordinateur d'apprentissage de modifier un événement existant.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Identifiant de l'événement à modifier."
          }
        ],
        "requestBody": {
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "Identifiant de l'événement à modifier."
        }
      },
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "endDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "type": {
                  "type": "string"
                },
                "groups": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      }
                    }
                  }
                }
              },
              "required": ["description", "endDate", "type"]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Événement modifié avec succès."
        },
        "500": {
          "description": "Erreur interne du serveur."
        }
      }
    },
    "delete": {
      "summary": "Suppression d'un événement",
      "tags": ["Event"],
      "description": "Permet à un admin ou coordinateur d'apprentissage de supprimer un événement.",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "Identifiant de l'événement à supprimer."
        }
      ],
      "responses": {
        "200": {
          "description": "Événement supprimé avec succès."
        },
        "500": {
          "description": "Erreur interne du serveur."
        }
      }
    }
  },
  "/events/diary/{id}": {
    "get": {
      "summary": "Récupération des événements d'un journal",
      "tags": ["Event"],
      "description": "Permet à un utilisateur de récupérer les événements associés à un journal spécifique.",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "Identifiant du journal."
        }
      ],
      "responses": {
        "200": {
          "description": "Liste des événements du journal récupérée avec succès."
        },
        "500": {
          "description": "Erreur interne du serveur."
        }
      }
    }
  },
  "/note": {
    "post": {
      "summary": "Création d'une note",
      "tags": ["Note"],
      "description": "Permet à un utilisateur connecté de créer une note.",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                }
              },
              "required": ["title", "content"]
            }
          }
        }
      },
      "responses": {
        "201": {
          "description": "Note créée avec succès."
        },
        "500": {
          "description": "Erreur interne du serveur."
        }
      }
    },
    "get": {
      "summary": "Récupération des notes",
      "tags": ["Note"],
      "description": "Permet à un utilisateur connecté de récupérer toutes ses notes.",
      "responses": {
        "200": {
          "description": "Liste des notes récupérée avec succès."
        },
        "500": {
          "description": "Erreur interne du serveur."
        }
      }
    }
  },
  "/note/{noteId}": {
    "patch": {
      "summary": "Mise à jour d'une note",
      "tags": ["Note"],
      "description": "Permet à un utilisateur connecté de mettre à jour une de ses notes.",
      "parameters": [
        {
          "name": "noteId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "Identifiant de la note à mettre à jour."
        }
      ],
      "requestBody": {
        "required": false,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Note mise à jour avec succès."
        },
        "500": {
          "description": "Erreur interne du serveur."
        }
      }
    },
    "delete": {
      "summary": "Suppression d'une note",
      "tags": ["Note"],
      "description": "Permet à un utilisateur connecté de supprimer une de ses notes.",
      "parameters": [
        {
          "name": "noteId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "Identifiant de la note à supprimer."
        }
      ],
      "responses": {
        "200": {
          "description": "Note supprimée avec succès."
        },
        "500": {
          "description": "Erreur interne du serveur."
        }
      }
    }
  },
  "/events/{id}/file": {
    "get": {
      "summary": "Récupération du fichier d'un événement",
      "tags": ["Event"],
      "description": "Permet à un utilisateur de récupérer le fichier d'un événement",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "ID de l'événement"
        }
      ],
      "responses": {
        "200": {
          "description": "Récupération du fichier d'un événement"
        }
      }
    },
    "post": {
      "summary": "Ajout d'un fichier à un événement",
      "tags": ["Event"],
      "description": "Permet à un utilisateur d'ajouter un fichier à un événement",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "ID de l'événement"
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "required": true,
                  "description": "Nom du fichier"
                },
                "comment": {
                  "type": "string",
                  "required": false,
                  "description": "Commentaire du fichier"
                },
                "file": {
                  "type": "string",
                  "format": "binary",
                  "required": true,
                  "description": "Fichier de l'événement"
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Ajout d'un fichier à un événement"
        }
      }
    }
  },
  "/events/{id}/file/{fileId}": {
    "delete": {
      "summary": "Suppression d'un fichier d'un événement",
      "tags": ["Event"],
      "description": "Permet à un utilisateur de supprimer un fichier d'un événement",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "ID de l'événement"
        },
        {
          "name": "fileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "ID du fichier"
        }
      ],
      "responses": {
        "200": {
          "description": "Suppression d'un fichier d'un événement"
        }
      }
    }
  },
  "/groups": {
    "get": {
      "summary": "Récupération des groupes",
      "tags": ["Group"],
      "description": "Permet à un utilisateur de récupérer la liste des groupes",
      "responses": {
        "200": {
          "description": "Récupération des groupes",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Message de la requete"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Group"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "post": {
      "summary": "Création d'un groupe",
      "tags": ["Group"],
      "description": "Permet à un admin ou un CA de créer un groupe",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Group"
            }
          }
        }
      }
    },
    "delete": {
      "summary": "Suppression d'un groupe",
      "tags": ["Group"],
      "description": "Permet à un admin ou un CA de supprimer un groupe",
      "parameters": [
        {
          "name": "id",
          "in": "query",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "ID du groupe"
        }
      ],
      "responses": {
        "200": {
          "description": "Suppression d'un groupe",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "Status du succes de la requete"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message de la requete"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "/groups/{id}/link": {
    "post": {
      "summary": "Lier des utilisateurs à un groupe",
      "tags": ["Group"],
      "description": "Permet à un admin ou un CA de lier des utilisateurs à un groupe",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "ID du groupe"
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "userIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  },
                  "description": "Liste des ID des utilisateurs à lier"
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Lier des utilisateurs à un groupe",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Message de la requete"
                  }
                }
              }
            }
          }
        }
      }
    },
    "delete": {
      "summary": "Dissocier des utilisateurs d'un groupe",
      "tags": ["Group"],
      "description": "Permet à un admin ou un CA de dissocier des utilisateurs d'un groupe",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "ID du groupe"
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "userIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  },
                  "description": "Liste des ID des utilisateurs à dissocier"
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Dissocier des utilisateurs d'un groupe",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Message de la requete"
                  },
                  "data": {
                    "$ref": "#/components/schemas/Group"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "/groups/{id}/file": {
    "get": {
      "summary": "Récupération du fichier d'un groupe",
      "tags": ["Group"],
      "description": "Permet à un utilisateur de récupérer le fichier d'un groupe",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "ID du groupe"
        }
      ],
      "responses": {
        "200": {
          "description": "Récupération du fichier d'un groupe"
        }
      }
    },
    "post": {
      "summary": "Ajout d'un fichier à un groupe",
      "tags": ["Group"],
      "description": "Permet à un utilisateur d'ajouter un fichier à un groupe",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "ID du groupe"
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "required": true,
                  "description": "Nom du fichier"
                },
                "comment": {
                  "type": "string",
                  "required": false,
                  "description": "Commentaire du fichier"
                },
                "file": {
                  "type": "string",
                  "format": "binary",
                  "required": true,
                  "description": "Fichier du groupe"
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Ajout d'un fichier à un groupe"
        }
      }
    }
  },
  "/groups/{id}/file/{fileId}": {
    "delete": {
      "summary": "Suppression d'un fichier d'un groupe",
      "tags": ["Group"],
      "description": "Permet à un utilisateur de supprimer un fichier d'un groupe",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "ID du groupe"
        },
        {
          "name": "fileId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "ID du fichier"
        }
      ],
      "responses": {
        "200": {
          "description": "Suppression d'un fichier d'un groupe"
        }
      }
    }
  },
  "/deliverables": {
    "post": {
      "summary": "Création d'un livrable",
      "tags": ["Deliverable"],
      "description": "Permet à un admin de créer un livrable",
      "requestBody": {
        "required": true,
        "content": {
          "multipart/form-data": {
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string",
                  "required": false,
                  "description": "Commentaire du livrable"
                },
                "file": {
                  "type": "string",
                  "format": "binary",
                  "required": true,
                  "description": "Fichier du livrable"
                },
                "trainingDiaryId": {
                  "type": "integer",
                  "required": true,
                  "description": "ID du journal lié au livrable"
                },
                "eventId": {
                  "type": "integer",
                  "required": true,
                  "description": "ID de l'événement lié au livrable"
                }
              }
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Création d'un livrable",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "Status du succes de la requete"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message de la requete"
                  },
                  "data": {
                    "type": "object",
                    "description": "Données de la requete",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Id du livrable"
                      },
                      "comment": {
                        "type": "string",
                        "description": "Commentaire du livrable"
                      },
                      "file": {
                        "type": "string",
                        "description": "Fichier du livrable"
                      },
                      "diaryId": {
                        "type": "integer",
                        "description": "Id du journal lié au livrable"
                      },
                      "eventId": {
                        "type": "integer",
                        "description": "Id de l'événement lié au livrable"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "/deliverables/trainingDiary/{trainingDiaryId}/event/{eventId}": {
    "get": {
      "summary": "Récupération des livrables d'un journal et d'un événement",
      "tags": ["Deliverable"],
      "description": "Permet à un utilisateur de récupérer la liste des livrables d'un journal et d'un événement",
      "parameters": [
        {
          "name": "trainingDiaryId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "ID du journal"
        },
        {
          "name": "eventId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "ID de l'événement"
        }
      ],
      "responses": {
        "200": {
          "description": "Récupération des livrables d'un journal et d'un événement",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer",
                    "description": "Status du succes de la requete"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message de la requete"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Deliverable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "/company/": {
    "post": {
      "summary": "Create a company",
      "description": "Create a new company with the provided details.",
      "tags": ["Company"],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the company."
                },
                "address": {
                  "type": "string",
                  "description": "Address of the company."
                },
                "city": {
                  "type": "string",
                  "description": "City where the company is located."
                },
                "country": {
                  "type": "string",
                  "description": "Country where the company is located."
                },
                "description": {
                  "type": "string",
                  "description": "Description of the company."
                },
                "apprenticeNumber": {
                  "type": "integer",
                  "description": "Number of apprentices in the company."
                },
                "opco": {
                  "type": "string",
                  "description": "OPCO of the company."
                }
              },
              "required": [
                "name",
                "address",
                "city",
                "country",
                "description",
                "apprenticeNumber",
                "opco"
              ]
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Company created successfully."
        },
        "500": {
          "description": "Internal server error."
        }
      }
    },
    "get": {
      "summary": "Get all companies",
      "description": "Retrieve a list of all companies.",
      "tags": ["Company"],
      "responses": {
        "200": {
          "description": "List of companies retrieved successfully."
        },
        "500": {
          "description": "Internal server error."
        }
      }
    }
  },
  "/company/{company_id}": {
    "get": {
      "summary": "Get a specific company",
      "description": "Retrieve details of a specific company by ID.",
      "tags": ["Company"],
      "parameters": [
        {
          "name": "company_id",
          "in": "path",
          "required": true,
          "description": "ID of the company to retrieve.",
          "schema": {
            "type": "integer"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Company retrieved successfully."
        },
        "500": {
          "description": "Internal server error."
        }
      }
    },
    "delete": {
      "summary": "Delete a company",
      "description": "Delete an existing company by ID.",
      "tags": ["Company"],
      "parameters": [
        {
          "name": "company_id",
          "in": "path",
          "required": true,
          "description": "ID of the company to delete.",
          "schema": {
            "type": "integer"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Company deleted successfully."
        },
        "500": {
          "description": "Internal server error."
        }
      }
    }
  },
  "/compagnyAccount/compagny/{compagny_id}/user/{user_id}": {
    "post": {
      "summary": "Création d'un compte compagnie",
      "tags": ["Company Account"],
      "description": "Permet à un administrateur ou coordinateur apprenti de créer un compte compagnie pour un utilisateur donné.",
      "parameters": [
        {
          "name": "compagny_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "Identifiant de la compagnie."
        },
        {
          "name": "user_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "Identifiant de l'utilisateur."
        }
      ],
      "responses": {
        "201": {
          "description": "Compte compagnie créé avec succès."
        },
        "500": {
          "description": "Erreur interne du serveur."
        }
      },
      "security": [
        {
          "bearerAuth": []
        }
      ]
    }
  },
  "/compagnyAccount/user/{user_id}": {
    "delete": {
      "summary": "Suppression d'un compte compagnie",
      "tags": ["Company Account"],
      "description": "Permet à un administrateur ou coordinateur apprenti de supprimer un compte compagnie pour un utilisateur donné.",
      "parameters": [
        {
          "name": "user_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "Identifiant de l'utilisateur."
        }
      ],
      "responses": {
        "200": {
          "description": "Compte compagnie supprimé avec succès."
        },
        "500": {
          "description": "Erreur interne du serveur."
        }
      },
      "security": [
        {
          "bearerAuth": []
        }
      ]
    }
  },
  "/compagnyAccount": {
    "get": {
      "summary": "Récupération des comptes compagnie",
      "tags": ["Company Account"],
      "description": "Permet à un administrateur ou coordinateur apprenti de récupérer tous les comptes compagnie.",
      "responses": {
        "200": {
          "description": "Liste des comptes compagnie récupérée avec succès."
        },
        "500": {
          "description": "Erreur interne du serveur."
        }
      },
      "security": [
        {
          "bearerAuth": []
        }
      ]
    }
  },
  "/compagnyAccount/compagny/{compagny_id}": {
    "get": {
      "summary": "Récupération d'un compte compagnie",
      "tags": ["Company Account"],
      "description": "Permet à un administrateur ou coordinateur apprenti de récupérer les informations d'un compte compagnie spécifique.",
      "parameters": [
        {
          "name": "compagny_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "Identifiant de la compagnie."
        }
      ],
      "responses": {
        "200": {
          "description": "Compte compagnie récupéré avec succès."
        },
        "500": {
          "description": "Erreur interne du serveur."
        }
      },
      "security": [
        {
          "bearerAuth": []
        }
      ]
    }
  },
  "/tutors/apprentices/{id}": {
    "get": {
      "summary": "Récupération des apprentis d'un tuteur",
      "tags": ["Tutor"],
      "description": "Permet à un utilisateur de récupérer la liste des apprentis d'un tuteur",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "ID du tuteur"
        }
      ],
      "responses": {
        "200": {
          "description": "Récupération des apprentis d'un tuteur",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Apprentice"
                }
              }
            }
          }
        }
      }
    }
  },
  "/biannualEvaluations/trainingDiary/:trainingDiaryId": {
    "get": {
      "summary": "Récupération des evaluations semestrielles d'un journal",
      "tags": ["BiannualEvaluation"],
      "description": "Permet à un utilisateur de récupérer la liste des evaluations semestrielles d'un journal",
      "parameters": [
        {
          "name": "trainingDiaryId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer"
          },
          "description": "ID du journal"
        }
      ],
      "responses": {
        "200": {
          "description": "Récupération des evaluations semestrielles d'un journal",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BiannualEvaluation"
                }
              }
            }
          }
        }
      }
    }
  },
  "/biannualEvaluations": {
    "post": {
      "summary": "Création d'une evaluation semestrielle",
      "tags": ["BiannualEvaluation"],
      "description": "Permet à un tuteur de créer une evaluation semestrielle",
      "requestBody": {
        "description": "Evaluation semestrielle",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BiannualEvaluation"
            }
          }
        },
        "required": true
      },
      "responses": {
        "201": {
          "description": "Evaluation semestrielle créée",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BiannualEvaluation"
              }
            }
          }
        }
      }
    },
    "put": {
      "summary": "Modification d'une evaluation semestrielle",
      "tags": ["BiannualEvaluation"],
      "description": "Permet à un tuteur de modifier une evaluation semestrielle",
      "requestBody": {
        "description": "Evaluation semestrielle",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BiannualEvaluation"
            }
          }
        },
        "required": true
      },
      "responses": {
        "200": {
          "description": "Evaluation semestrielle modifiée",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BiannualEvaluation"
              }
            }
          }
        }
      }
    }
  },
  "/skills": {
    "get": {
      "summary": "Récupération des skills",
      "tags": ["BiannualEvaluation"],
      "description": "Permet à un utilisateur de récupérer la liste des skills",
      "responses": {
        "200": {
          "description": "Récupération des skills",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Skill"
                }
              }
            }
          }
        }
      }
    }
  }
}
